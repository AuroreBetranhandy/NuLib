!-*-f90-*-
subroutine GaussLaguerreQuadrature_roots_and_weights(n,roots,weights)

  implicit none
  
  !inputs
  integer, intent(in) :: n !degree of GaussLaguerreQuadrature
  
  !outputs
  real*8, dimension(:), intent(out) :: roots(n) !roots of polynomial, user must be sure the size of array comforms
  real*8, dimension(:), intent(out) :: weights(n) !weights for integration, note we add in the Exp[x] in the weights because our functions do not have an explicit Exp[-x]

  select case (n)
  case (4)
     roots = (/0.32254768961939231180d0, 1.7457611011583465757d0, 4.5366202969211279833d0, &
          9.3950709123011331292d0/)
     weights = (/0.8327391238378892466d0, 2.048102438454296821d0, 3.631146305821517862d0, &
          6.48714508440766227d0/)
  case (16)
     roots = (/0.087649410478927840360d0, 0.46269632891508083188d0, &
          1.1410577748312268569d0, 2.1292836450983806163d0, 3.4370866338932066452d0, &
          5.0780186145497679129d0, 7.0703385350482341304d0, 9.4383143363919387839d0, &
          12.214223368866158737d0, 15.441527368781617077d0, 19.180156856753134855d0, &
          23.515905693991908532d0, 28.578729742882140368d0, 34.583398702286625815d0, &
          41.940452647688332635d0, 51.701160339543318364d0/)
     weights = (/0.2250363148642472519d0, 0.525836052762342454d0, &
          0.831961391687087088d0, 1.146099240963751705d0, 1.471751316966808589d0, &
          1.813134687381348165d0, 2.175517519694607452d0, 2.56576275016502921d0, &
          2.99321508637137517d0,  3.47123448310209029d0, 4.02004408644466887d0, &
          4.67251660773285427d0, 5.48742065798615247d0, 6.58536123328921366d0, &
          8.27635798436423449d0, 11.8242775516584348d0/)
  case (32)
     roots = (/0.044489365833267018419d0, 0.23452610951961853745d0, &
          0.57688462930188642649d0, 1.0724487538178176330d0, 1.7224087764446454411d0, &
          2.5283367064257948811d0, 3.4922132730219944896d0, 4.6164567697497673878d0, &
          5.9039585041742439466d0, 7.3581267331862411132d0, 8.9829409242125961034d0, &
          10.783018632539972068d0, 12.763697986742725115d0, 14.931139755522557320d0, &
          17.292454336715314789d0, 19.855860940336054740d0, 22.630889013196774489d0, &
          25.628636022459247767d0, 28.862101816323474744d0, 32.346629153964737003d0, &
          36.100494805751973804d0, 40.145719771539441536d0, 44.509207995754937976d0, &
          49.224394987308639177d0, 54.333721333396907333d0, 59.892509162134018196d0, &
          65.975377287935052797d0, 72.687628090662708639d0, 80.187446977913523067d0, & 
          88.735340417892398689d0, 98.829542868283972559d0, 111.75139809793769521d0/)
     weights = (/0.1141871057681048489d0, 0.266065216897615216d0, 0.418793137324852994d0, &
          0.572532846499804706d0, 0.727648788380971311d0, 0.884536719340249717d0, &
          1.043618875892076967d0, 1.205349274152352580d0, 1.37022133852178119d0, &
          1.53877725646864475d0, 1.71161935268645726d0, 1.88942406344948410d0, &
          2.07295934024653367d0, 2.26310663399696361d0, 2.46088907248823613d0, &
          2.66750812639711715d0, 2.88439209292204179d0, 3.11326132703958618d0, &
          3.35621769259580256d0, 3.61586985648426881d0, 3.89551304494854956d0, &
          4.19939410471158549d0, 4.53311497853436177d0, 4.90427028761124484d0, &
          5.32350097202366611d0, 5.80633321423362136d0, 6.37661467415965254d0, &
          7.0735265807072421d0, 7.9676935092959007d0, 9.2050403312781896d0, &
          11.1630130907678731d0, 15.3901804152606431d0/)
  case (64)
     roots = (/0.022415874146705280023d0, 0.11812251209677047980d0, &
          0.29036574401803648400d0, 0.53928622122797903932d0, &
          0.86503700464811394462d0, 1.2678140407752413981d0, 1.7478596260594362528d0, &
          2.3054637393075087185d0, 2.9409651567252518407d0, 3.6547526502072905270d0, &
          4.4472663433130943567d0, 5.3189992544963903435d0, 6.2704990469236539129d0, &
          7.3023700025873957472d0, 8.4152752394830241945d0, 9.6099391927961080358d0, &
          10.887150383886372143d0, 12.247764504244301618d0, 13.692707845547505153d0, &
          15.222981111524728848d0, 16.839663652648737211d0, 18.543918170859190524d0, &
          20.336995948730235501d0, 22.220242665950876540d0, 24.195104875933253990d0, &
          26.263137227118485785d0, 28.426010527501027299d0, 30.685520767525971771d0, &
          33.043599236437829126d0, 35.502323891141209587d0, 38.063932165646468260d0, &
          40.730835444458626366d0, 43.505635466421529853d0, 46.391142978616192074d0, &
          49.390399025624686679d0, 52.506699341346301650d0, 55.743622413278380463d0, &
          59.105061919017106609d0, 62.595264400151395596d0, 66.218873251247564382d0, &
          69.980980377146829229d0, 73.887187232482963211d0, 77.943677434463120314d0, &
          82.157303778319304295d0, 86.535693349456518210d0, 91.087375613133090146d0, &
          95.821940015520732095d0, 100.75023196951397963d0, 105.88459946879994936d0, &
          111.23920752443958206d0, 116.83044505130649846d0, 122.67746026853857658d0, &
          128.80287876923767251d0, 135.23378794952582783d0, 142.00312148993151903d0, &
          149.15166590004938859d0, 156.73107513267116123d0, 164.80860265515052299d0, &
          173.47494683642427452d0, 182.85820469143146365d0, 193.15113603707291148d0, &
          204.67202848505945595d0, 218.03185193532851633d0, 234.80957917132616471d0/)
     weights = (/0.0575280378894525890d0, 0.133947450012544835d0, 0.210559520190062753d0, &
          0.287306741593137459d0, 0.364227443636669253d0, 0.441366991509961980d0, &
          0.518772490744390801d0, 0.596492178616888933d0, 0.674575428995967007d0, &
          0.75307288621771403d0, 0.83203664061384097d0, 0.91152042608958027d0, &
          0.99157983552704779d0, 1.07227255416963941d0, 1.15365861273396412d0, &
          1.23580066279341249d0, 1.31876427755265408d0, 1.40261828167573411d0, &
          1.48743511441922552d0, 1.57329123099770495d0, 1.66026754790322604d0, &
          1.74844993884468967d0, 1.83792978910258782d0, 1.92880461745247174d0, &
          2.02117877644994616d0, 2.11516424385799163d0, 2.21088152041886538d0, &
          2.30846065213609280d0, 2.40804239887634595d0, 2.50977957560631372d0, &
          2.61383859818030413d0, 2.72040127259742280d0, 2.82966687545834170d0, &
          2.94185458451072051d0, 3.05720633240365252d0, 3.17599017505567106d0, &
          3.29850428971767201d0, 3.42508174873032369d0, 3.55609625571314495d0, &
          3.69196908511496649d0, 3.83317753889189122d0, 3.98026533306148233d0, &
          4.13385546300965414d0, 4.29466628606838520d0, 4.4635318277968967d0, &
          4.6414277027025426d0, 4.8295046006493150d0, 5.0291321227984098d0, &
          5.2419570128773013d0, 5.4699817855490906d0, 5.7156728619183667d0, &
          5.9821124019170983d0, 6.2732165922168386d0, 6.5940581356188163d0, &
          6.9513580176959900d0, 7.3542639486080784d0, 7.8156389859664634d0, &
          8.3543144845334196d0, 8.9993075322557026d0, 9.7984432991094467d0, &
          10.8382034590564481d0, 12.2978755043572692d0, 14.6428784968432459d0, &
          19.7904730417376936d0/)
  case default
     stop "GaussLaguerreQuadrature_roots_and_weights: with this n is not defined"
  end select
        
  

end subroutine GaussLaguerreQuadrature_roots_and_weights
